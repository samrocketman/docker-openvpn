server 10.9.8.0 255.255.255.0
tls-server
tls-version-min 1.2
cipher AES-256-GCM
proto tcp-server
log-append /dev/stdout
dev tun
topology subnet
user nobody
group nobody
keepalive 15 120
verb 3

# custom config options, if any
$(
  for x in "${custom_dns[@]}"; do
    echo 'push "dhcp-option DNS '"$x"'"';
  done
)

# restart persistence
persist-tun
persist-key
replay-persist /tmp/replay-persist

# Alternate topology net30 has most compatibility
;topology net30
;script-security 2
;up "/bin/sh -exc 'route add -net 10.9.8.0 netmask 255.255.255.0 gw \$5' vpn.up"

# TLS verification options
remote-cert-tls client
# client certificate CN must start with "openvpn-"
verify-x509-name openvpn- name-prefix

# certificates, keys, and dh params
# key-direction is for tls-auth; server 0 and client is 1
key-direction 0
<tls-auth>
# AWK static.key a static key used to sign HMACs and prevent attacks.
</tls-auth>
<cert>
# AWK ../my_internal_ca/myCA/certs/openvpn.crt server certificate (okay to be public)
</cert>
<key>
# AWK ../my_internal_ca/myCA/private/openvpn.key server key (MUST stay private)
</key>
<dh>
# AWK dh.pem Diffie-Hellman parameters (MUST stay private)
</dh>
<ca>
# AWK ../my_internal_ca/myCA/certs/myca.crt certificate authority which signed openvpn.crt (okay to be public)
</ca>
<crl-verify>
# AWK ../my_internal_ca/myCA/crl.pem certificate revocation list (okay to be public)
</crl-verify>
